// Generated by CoffeeScript 1.10.0
(function() {
  var compare, d0, d1, d2, i, j, k, l, len, len1, len2, m, n, ret, str, t, testArr, value;

  compare = require('./index').compare;

  testArr = [['', '', true], ['abc', '', false], ['abc', '+abc', true], ['abcd', '+abc', false], ['abc', '+abcd', false], ['abc', '=abc', true], ['abc', '=abcd', false], ['abcd', '=abc', false], ['abc', '<>abc', false], ['abc', '<>abcd', true], ['abc', '-abc', false], ['abc', '-abcd', true], ['abc', '>abc', false], ['2', '>1', true], ['2', '>1.1', true], ['abc', '>=abc', true], ['2', '>=1', true], ['abc', '<abc', false], ['abc', '<abcd', true], ['1', '<2', true], ['abc', '<=abc', true], ['abc', '<=abcd', true], ['1.3.1', '=1.%.1', true], ['1.3.1', '=%1.3', false], ['1.3.1', '-1.%.1', false], ['1.3.12', '+1.3.1%', true], ['1.1', '/1.*1/', true], ['1.1', '/2\\.1/', false], ['abc', '=abcd,>bcd;=bcd;=abcd;/abcd/;=ab%;', true], ['abc', '=abcd;=bcd;=abcd;/a.*c/;=ab%d;', true]];

  for (j = 0, len = testArr.length; j < len; j++) {
    t = testArr[j];
    str = t[0];
    value = t[1];
    ret = compare(str, value);
    if (ret === t[2]) {
      console.info("compare('" + str + "', '" + value + "') => " + ret);
    } else {
      console.error("compare('" + str + "', '" + value + "') => " + ret);
    }
  }

  d0 = new Date();

  for (k = 0, len1 = testArr.length; k < len1; k++) {
    t = testArr[k];
    for (i = l = 1; l < 10000; i = ++l) {
      compare(t[0], t[1]);
    }
  }

  d1 = new Date();

  for (m = 0, len2 = testArr.length; m < len2; m++) {
    t = testArr[m];
    for (i = n = 1; n < 10000; i = ++n) {
      compare(t[0], t[1], false);
    }
  }

  d2 = new Date();

  console.log("compare " + (10000 * testArr.length) + " times, used cache cost " + (d1 - d0) + "ms, and not used cache cost " + (d2 - d1) + "ms.");

  process.exit(-1);

}).call(this);

//# sourceMappingURL=test.js.map
